<style>
    body { font-family: Arial, sans-serif; }
    h2 { color: #2a5078; }
    p { color: #333; }
    .section { margin-bottom: 20px; }
</style>

<br/>
<br/>
<div class="section">
    <h2>ノー／ローコードとフルスタック開発の“いいとこ取り”</h2>
    <p>Codeer.LowCode.Blazor は、あなたのWebアプリをノー／ローコード化するためのフレームワークです。
    大半の機能はノー／ローコードで素早く作成し、必要な箇所はフルスタック開発と同様にプロコードで作り込み可能。
    その結果、短い納期と低コストで満足度の高いアプリを実現できます。</p>
</div>

<div class="section">
    <h2>こんなプロジェクトにおすすめ</h2>
    <ul>
        <li>コストと開発期間を抑えたい</li>
        <li>RDB を効果的に活用したい</li>
        <li>既存データや既存システムを生かしたい</li>
        <li>具体的な機能要件がある</li>
        <li>リリース後のカスタマイズも行いたい</li>
    </ul>
</div>

<div class="section">
    <h2>画面を手早く自由に作成</h2>
    <p>グリッドレイアウトと FlowLayout の組み合わせで、自由度の高い画面を構築できます。通常の画面だけでなくダイアログの作成も可能です。
    UIコンポーネント同士の連携はノーコード、または最小限のスクリプトで実現できます。サイドバー、ヘッダー、フッターなどの必須要素も提供され、
    こだわりのある方はプロコードでカスタマイズできます。</p>
</div>

<div class="section">
    <h2>RDB とシームレスに連携</h2>
    <p>フォームとDBテーブルを関連付け、データの入出力を実現します。複数フォームを連携させることで、結合（Join）や 1対N 関係の表現が可能です。
    フォームはビュー（View）にも接続でき、BI機能の実装も容易です。論理削除、楽観的ロック、作成／更新情報のトラッキングなど
    一般的なデータベース操作を標準でサポートします。変更履歴の保持も可能です。</p>
</div>

<div class="section">
    <h2>スクリプトでさらに自由度アップ</h2>
    <p>C# とほぼ同等の構文で記述できます。最小限のコードで機能を実装できるAPI設計になっており、
    コード補完により実装もスムーズ。プロコードで用意したカスタム関数の呼び出しも可能です。
    実行は主にクライアント側ですが、サーバー側での実行にも対応しています。</p>
    <ul>
        <li>一般的な計算処理</li>
        <li>画面制御</li>
        <li>WebAPI の実行</li>
        <li>Excel 編集／PDF 生成</li>
    </ul>
</div>

<div class="section">
    <h2>Excel 連携をサポート</h2>
    <p>汎用的なデータの入出力に加え、Excel でテンプレートを作成してレポートとして加工することも可能です。
    PDF への変換にも対応しています。</p>
</div>

<div class="section">
    <h2>認証と認可</h2>
    <p>一般的な Cookie 認証や Azure Active Directory を用いた既定の認証を提供します。その他の認証方式もカスタマイズ可能です。
    認可では、アプリケーション／画面／データの各レベルでアクセス制御を行えます。</p>
</div>

<div class="section">
    <h2>プロコードで特定機能を実装</h2>
    <p>場合によっては特別な画面や機能が必要になることがあります。Codeer.LowCode.Blazor は Blazor ライブラリのため、
    そのような実装に .NET コードを追加できます。さらに、コンポーネント化すればさまざまな場所で再利用できます。</p>
</div>
